prescence <- readDiscreteCharacterData(args[1])
tree <- readTrees(args[2])[1] 


moves  = VectorMoves()

#r_gain ~ dnLognormal(1,1)
#r_loss ~ dnLognormal(1,1)

r_gain ~ dnUniform( 0.0, 20 )
r_loss ~ dnUniform( 0.0, 20 )
moves.append(mvScale(r_loss, lambda=1.0, weight=2.0))
moves.append(mvScale(r_gain, lambda=1.0, weight=2.0))
Q := fnFreeBinary([r_gain, r_loss], rescaled=FALSE)

#alpha_prior_mean <- ln(5)
#alpha_prior_sd <- 2
#alpha ~ dnLognormal( alpha_prior_mean, alpha_prior_sd )
alpha ~ dnUniform( 0.0, 20 )

sr := fnDiscretizeGamma( alpha, alpha, 10, false )
moves.append(mvScale(alpha, lambda=1.0, weight=2.0))

phylo ~ dnPhyloCTMC(tree=tree, Q=Q, siteRates=sr, type="Binary")
phylo.clamp(prescence)


mymodel = model(phylo)

monitors = VectorMonitors()
monitors.append(mnScreen(printgen=10, alpha, r_gain, r_loss) )
monitors.append(mnModel(filename=args[3], printgen=10, separator = TAB, alpha, r_gain, r_loss))

mymcmc = mcmc(mymodel, moves, monitors, nruns = 4, combine = "mixed")
mymcmc.burnin( generations = 100, tuningInterval = 1)
mymcmc.run(generations=2000, tuningInterval=200)

q()
